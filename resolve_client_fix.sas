/**HEADER------------------------------------------------------------------------------------
|
| PROGRAM NAME: RESOLVE_CLIENT.SAS
|
| CALL REFERENCE: RESOLVE_CLIENT CALLS
|					1) RESOLVE_CLIENT_QL.SAS
|					2) RESOLVE_CLIENT_RX.SAS
|					2) RESOLVE_CLIENT_RE.SAS
|
| PURPOSE:
|       DETERMINING THE CLIENTS AND THEIR HEIRARCHIES FOR ALL THREE ADJUDICATION ENGINE
|
| INPUT:  
|       MACRO VARIABLES FROM HERCULES_IN.SAS :
|       	INITIATIVE_ID, PROGRAM_ID, TASK_ID, QL_ADJ, RX_ADJ, RE_ADJ,
|			DFL_CLT_INC_EXU_IN, OVRD_CLT_SETUP_IN, DSPLY_CLT_SETUP_CD,
|			TABLE_PREFIX
|		TABLES :
|			PROGRAM-MAINTAINENCE SET-UP
|				HERCULES.TPGMTASK_QL_RUL (QL)
| 				CLAIMSP.TCLIENT_PGM_DLY (QL)
|				CLAIMSA.TCPGRP_CLT_PLN_GR1 (QL)
|				CLAIMSA.TRPTDT_RPT_GRP_DTL (QL) 
|				HERCULES.TPGMTASK_RXCLM_RUL (RX)
|				HERCULES.TPGMTASK_RECAP_RUL (RE)
|				DSS_CMX.V_ALGN_LVL_DENORM (RX/RE)
|			CLIENT SPECIFIC SET-UP
|          		HERCULES.TINIT_CLIENT_RULE (QL/RX/RE)
|          		HERCULES.TINIT_CLT_RULE_DEF (QL/RX/RE)
|				CLAIMSA.TCPGRP_CLT_PLN_GR1 (QL)
|				CLAIMSA.TRPTDT_RPT_GRP_DTL (QL)
|          		CLAIMSA.TCPG_PB_TRL_HIST (QL)
|          		CLAIMSA.TPRESC_BENEFIT (QL)
|			    HERCULES.TINIT_RXCLM_CLT_RL (RX) 
|			    HERCULES.TINIT_RXCLM_CLT_RL (RE) 
|				DSS_CMX.V_ALGN_LVL_DENORM (RX/RE)
|
| OUTPUT: 
|       MACRO VARIABLES
|       	RESOLVE_CLIENT_EXCLUDE_FLAG: 
|				0=INCLUDE CPGs / ALGN_LVL_GID_KEY IN THE &TBL_NAME_OUT IN THE MAILING,
|           	1=EXCLUDE CPGs / ALGN_LVL_GID_KEY IN THE &TBL_NAME_OUT FROM THE MAILING.
|       	RESOLVE_CLIENT_TBL_EXIST_FLAG / RESOLVE_CLIENT_TBL_EXIST_FLAG_RX /
|			RESOLVE_CLIENT_TBL_EXIST_FLAG_RE :
|           	0 = TABLE &TBL_NAME_OUT DOES NOT EXIST
|           	1 = TABLE &TBL_NAME_OUT HAS BEEN CREATED.
|		TABLE:
|			&TBL_NAME_OUT WITH CLIENT_ID AND CLT_PLAN_GROUP_ID
|			&TBL_NAME_OUT2 IF &TBL_NAME_IN IS PASSED AS AN INPUT TABLE
|			&TBL_NAME_OUT_RX WITH ALGN_LVL_GID_KEY, CARRIER_ID, ACCOUNT_ID, GROUP_CD
|			&TBL_NAME_OUT_RX2 IF &TBL_NAME_IN IS PASSED AS AN INPUT TABLE
|			&TBL_NAME_OUT_RE WITH ALGN_LVL_GID_KEY, INSURANCE_CD, CARRIER_ID, GROUP_CD
|			&TBL_NAME_OUT_RE2 IF &TBL_NAME_IN IS PASSED AS AN INPUT TABLE
|
|------------------------------------------------------------------------------------------
| HISTORY: SEPT      - JOHN HOU
|          24FEB2006 - BRIAN STROPICH - ADDED THE UPCASE FUNCTION IN THE ASSIGNMENT OF
|                                       THE MACRO VARIABLE SELECT_STR (HEAT 02530529)
|		   14APR2008 - SR Hercules Version  2.1.01
|									  - MODULARIZED RESOLVE_CLIENT TO RUN FOR ALL 
|                                       3 ADJUDICATION ENGINES
|                                     - EXISTING CODE THAT RAN FOR QL ADJUDICATION
|										HAVE BEEN MOVED TO RESOLVE_CLIENT_QL.SAS, WITH
|										CHANGES TO PROGRAM-MAINTAINENCE SETUP AND ALSO 
|										SOME CHANGES IN INITIATIVE SET-UP
|										(REFER RESOLVE_CLIENT_QL.SAS FOR DETAILS)
|
|30AUG2012 - S.BILETSKY - LOGIC CHANGES FOR CLIENT CONNECT RE TO RX PROJECT. (CCW4)
|25JUL2015 - S.BILETSKY - LOGIC CHANGES FOR CLIENT CONNECT QL TO RX PROJECT. (Q2X)
|
|------------------------------------------------------------------------------------------
+---------------------------------------------------------------------------------*HEADER*/

%MACRO RESOLVE_CLIENT_FIX(TBL_NAME_IN = ,
                      TBL_NAME_IN_RX = ,
                      TBL_NAME_IN_RE = ,

					  TBL_NAME_OUT = ,
					  TBL_NAME_OUT_RX = ,
					  TBL_NAME_OUT_RE = ,

					  TBL_NAME_OUT2 = ,
					  TBL_NAME_OUT_RX2 = ,
					  TBL_NAME_OUT_RE2 = ,

					  NO_OUTPUT_TABLES_IN = 0 ,
					  NO_OUTPUT_TABLES_IN_RX = 0 ,
					  NO_OUTPUT_TABLES_IN_RE = 0 ,

					  EXECUTE_CONDITION = %STR(1=1)
					 );

%*SASDOC -------------------------------------------------------------------------
 | INITIALIZE THE GLOBAL ERROR FLAG ERR_FL = 0, WHICH IS SET TO 1 BY SET_ERR_FL MACRO
 +---------------------------------------------------------------------------SASDOC;

%LET ERR_FL = 0;

%*SASDOC -------------------------------------------------------------------------
 | MACRO VARIABLES OBTAINED FROM HERCULES_IN.SAS
 +---------------------------------------------------------------------------SASDOC;

%PUT NOTE: INITIATIVE_ID = &INITIATIVE_ID;
%PUT NOTE: QL_ADJ = &QL_ADJ;
%PUT NOTE: RX_ADJ = &RX_ADJ;
%PUT NOTE: RE_ADJ = &RE_ADJ;
%PUT NOTE: PROGRAM_ID = &PROGRAM_ID;
%PUT NOTE: TASK_ID = &TASK_ID;
%PUT NOTE: DFL_CLT_INC_EXU_IN = &DFL_CLT_INC_EXU_IN;
%PUT NOTE: OVRD_CLT_SETUP_IN = &OVRD_CLT_SETUP_IN;
%PUT NOTE: DSPLY_CLT_SETUP_CD = &DSPLY_CLT_SETUP_CD;
%PUT NOTE: DB2_TMP = &DB2_TMP;
%PUT NOTE: TABLE_PREFIX = &TABLE_PREFIX;

%*SASDOC -------------------------------------------------------------------------
 | MACRO VARIABLES OBTAINED FROM USER INPUT / DEFAULT INPUT
 +---------------------------------------------------------------------------SASDOC;

%PUT NOTE: TBL_NAME_IN = &TBL_NAME_IN;
%PUT NOTE: TBL_NAME_IN_RX = &TBL_NAME_IN_RX;
%PUT NOTE: TBL_NAME_IN_RE = &TBL_NAME_IN_RE;
%PUT NOTE: TBL_NAME_OUT = &TBL_NAME_OUT;
%PUT NOTE: TBL_NAME_OUT_RX = &TBL_NAME_OUT_RX;
%PUT NOTE: TBL_NAME_OUT_RE = &TBL_NAME_OUT_RE;
%PUT NOTE: TBL_NAME_OUT2 = &TBL_NAME_OUT2;
%PUT NOTE: TBL_NAME_OUT_RX2 = &TBL_NAME_OUT_RX2;
%PUT NOTE: TBL_NAME_OUT_RE2 = &TBL_NAME_OUT_RE2;
%PUT NOTE: NO_OUTPUT_TABLES_IN = &NO_OUTPUT_TABLES_IN;
%PUT NOTE: NO_OUTPUT_TABLES_IN_RX = &NO_OUTPUT_TABLES_IN_RX;
%PUT NOTE: NO_OUTPUT_TABLES_IN_RE = &NO_OUTPUT_TABLES_IN_RE;
%PUT NOTE: EXECUTE_CONDITION = &EXECUTE_CONDITION;

%*SASDOC -------------------------------------------------------------------------
 | DEFINE GLOBAL MACRO VARIABLES
 | THESE MACRO VARIABLES ARE RESOLVED IN THIS PROCESS AND ARE PASSED ON TO 
 | OTHER PROCESSES THAT CALL RESOLVE_CLIENT.SAS
 +---------------------------------------------------------------------------SASDOC;

%GLOBAL RESOLVE_CLIENT_EXCLUDE_FLAG
		RESOLVE_CLIENT_TBL_EXIST_FLAG
		RESOLVE_CLIENT_TBL_EXIST_FLAG_RX
		RESOLVE_CLIENT_TBL_EXIST_FLAG_RE
		RESOLVE_CLIENT_IDS
		RESOLVE_CARRIER_IDS_RX
		RESOLVE_CLIENT_IDS_RE
		CLIENT_ID_CONDITION
        CLIENT_ID_CONDITION2
/*		LVL_GID_CONDITION_RX*/
/*		LVL_GID_CONDITION_Re*/
        PRIMARY_PROGRAMMER_EMAIL;

%*SASDOC -------------------------------------------------------------------------
 | OBTAIN PRIMARY_PROGRAMMER_EMAIL ADDRESS FROM ADM_LKP.ANALYTICS_USERS
 +---------------------------------------------------------------------------SASDOC;

PROC SQL NOPRINT;
	SELECT QUOTE(TRIM(LEFT(EMAIL)))
	INTO   :PRIMARY_PROGRAMMER_EMAIL SEPARATED BY ' '
	FROM   ADM_LKP.ANALYTICS_USERS
	WHERE  UPCASE(QCP_ID) IN ("&USER");
QUIT;

%SET_ERROR_FL;

%*SASDOC -------------------------------------------------------------------------
 | MACRO VARIABLES THAT ARE INITIALIZED TO DEFAULT VALUES OR 
 | CREATED BASED OFF OTHER MACRO VARIABLES 
 +---------------------------------------------------------------------------SASDOC;

%GLOBAL MAC_NAME;
%LET MAC_NAME = RESOLVE_CLIENT;
%LET RESOLVE_CLIENT_IDS = ;

%IF &DB2_TMP. = 	%THEN
	%LET DB2_TMP=&USER;

%IF &TBL_NAME_OUT = 	%THEN 
	%LET TBL_NAME_OUT = &DB2_TMP..&TABLE_PREFIX._QL;
%IF &TBL_NAME_OUT_RX = 	%THEN 
	%LET TBL_NAME_OUT_RX = &ORA_TMP..&TABLE_PREFIX._RX;
%IF &TBL_NAME_OUT_RE = 	%THEN 
	%LET TBL_NAME_OUT_RE = &ORA_TMP..&TABLE_PREFIX._RE;


%*SASDOC -------------------------------------------------------------------------
 | FOR IMPLICIT CONNECTS IN ORACLE
 | LIBNAME STATEMENT SHOULD BE REMOVED FROM THE CODE AFTER IT HAS BEEN ADDED TO
 | HERCULES_IN.SAS
 +---------------------------------------------------------------------------SASDOC;

/*%LET TBL_NAME_OUT_RE_IMP = &ORA_TMP..&TABLE_PREFIX._RE;*/
/*%LET TBL_NAME_OUT_RX_IMP = &ORA_TMP..&TABLE_PREFIX._RX;*/

%*SASDOC -------------------------------------------------------------------------
 | SETTING UP EXECUTE_CONDITION_FLAG
 +---------------------------------------------------------------------------SASDOC;

%LET EXECUTE_CONDITION_FLAG = %SYSFUNC(SIGN((&EXECUTE_CONDITION)));
%PUT NOTE: EXECUTE_CONDITION_FLAG=&EXECUTE_CONDITION_FLAG;

%*SASDOC -------------------------------------------------------------------------
 | SETTING UP RESOLVE_CLIENT_EXCLUDE_FLAG , CPG_CONDITION , CLIENT_CONDITION MACRO VARIABLE
 | NOTE: ALL THESE FLAGS ARE SET AT INITIATIVE / PROGRAM_TASK LEVEL AND 
 |       NOT AT INITIATIVE - ADJUDICATION / PROGRAM_TASK - ADJUDICATION LEVEL
 +---------------------------------------------------------------------------SASDOC;

/*%IF &DFL_CLT_INC_EXU_IN.=1 AND &OVRD_CLT_SETUP_IN.=0 	*/
%IF &DFL_CLT_INC_EXU_IN.=1 
	%THEN 
		%LET RESOLVE_CLIENT_EXCLUDE_FLAG=1;	
	%ELSE 
		%LET RESOLVE_CLIENT_EXCLUDE_FLAG=0;

%IF &RESOLVE_CLIENT_EXCLUDE_FLAG=1 
	%THEN %DO;
			 %LET HIERARCHY_CONDITION=%STR(IS NULL);
			 %LET CLIENT_CONDITION=NOT;
	%END;
	%ELSE %DO;
			 %LET HIERARCHY_CONDITION=%STR(IS NOT NULL);
			 %LET CLIENT_CONDITION=;
	%END;

%*SASDOC -------------------------------------------------------------------------
 | SANITY CHECK TO MAKE SURE THE INITIATIVE_ID PASSED BY HERCULES_IN.SAS 
 | EXISTS IN TINITIATIVE AND THE CORRESPONDING PROGRAM_ID AND TASK_ID EXISTS
 | IN TPROGRAM AND TPROGRAM_TASK
 +---------------------------------------------------------------------------SASDOC;

PROC SQL NOPRINT;
	SELECT COUNT(*)
	INTO :RECORD_CNT
	FROM &CLAIMSA..TPROGRAM A, 
		 &HERCULES..TINITIATIVE B,
         &HERCULES..TPROGRAM_TASK C
	WHERE B.INITIATIVE_ID = &INITIATIVE_ID.
      AND B.PROGRAM_ID = A.PROGRAM_ID
      AND B.PROGRAM_ID = C.PROGRAM_ID
      AND B.TASK_ID = C.TASK_ID;
QUIT;

%SET_ERROR_FL;

%PUT NOTE: RECORD_CNT=&RECORD_CNT;

%*SASDOC -------------------------------------------------------------------------
 | RESOLVE_CLIENT EXECUTES ONLY WHEN THE SANITY CHCEK ABOVE RETURNS ONE ROW
 | CCW4 - CHANGES for Client Connect RE to RX
 | Q2X - CHANGES for Client Connect QL to RX
 +---------------------------------------------------------------------------SASDOC;
/*initialize migration indicators*/
%LET CC_QL_MIGR_IND = 0;
%LET CC_RE_MIGR_IND = 0;

%IF &RECORD_CNT = 1 %THEN %DO;

	%IF &QL_ADJ = 1 %THEN %DO;
		%RESOLVE_CLIENT_QL;
	%END;
	%IF &RE_ADJ = 1 %THEN %DO;
		%RESOLVE_CLIENT_RE;
	%END;
	%IF &RX_ADJ = 1 %THEN %DO;
		%RESOLVE_CLIENT_RX;
	%END;


%END;
%ELSE %IF &RECORD_CNT = 0 %THEN %DO;
	%PUT WARNING: NO MATCHING INITIATIVE_ID/PROGRAM_ID/TASK_ID WAS FOUND.;
%END;
%ELSE %IF &RECORD_CNT > 1 %THEN %DO;
	%PUT WARNING: DUPLICATES FOUND FOR THE CORRESPONDING INITIATIVE_ID/PROGRAM_ID/TASK_ID;
%END;

%LET MAC_NAME = ;


%MEND RESOLVE_CLIENT_FIX;


