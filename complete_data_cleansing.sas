
/*HEADER-----------------------------------------------------------------------
|
| PROGRAM:  complete_data_cleansing.sas (macro)
|
| LOCATION: /PRG/sastest1/hercules/macros
|
| PURPOSE:  This macro updates the address record and data quality code on the
|           SAS dataset in the pending directory from TCMCTN_PENDING.  This
|           process is generally initiated by the user from a Java screen after
|           the "data cleansing process" has been performed.  The table
|           contains a data_quality_cd (accepted, rejected, suspended).
|           However, this code must be read along with the data_cleansing_cd on
|           TPHASE_RVR_FILE to determine the final status of the rejected or
|           suspended records.
|
| INPUT:    MACRO PARMS:
|
|             INIT_ID  = (Default: &INITIATIVE_ID)
|             PHASE_ID = (Default: &PHASE_SEQ_NB)
|             COM_CD   = (Default: &CMCNT_ROLE_CD)
|
|           DATASETS:
|
|             DATA_DIR.T_&INIT_ID._&PHASE_ID
|
| OUTPUT:   Updates to the particular task SAS dataset in the "pending" folder.
|
+-------------------------------------------------------------------------------
| HISTORY:  03OCT2003 - T.Kalfas  - Original.
|
+--------------------------------------------------------------------------------
|             Hercules Version  2.0.01
|             Dec 10 2007 - Carl J Starks
|
|             CHANGED the case statement so that data_quality_cd was not changed from 2 to 1 
|             nancy no longer wanted the soft edit codes for the data_quality_cd recoded 
|			 
| 13aug2008 - Suresh - Hercules Version  2.1.01
|	Commented out
|				dspnd.data_quality_cd 
|	Added
|				case when dspnd.data_cleansing_cd=2 and dspnd.data_quality_cd=2 then 3
|                   	 else dspnd.data_quality_cd
|                end as data_quality_cd
|
|
+-----------------------------------------------------------------------HEADER*/

%macro complete_data_cleansing(init_id=&initiative_id,
                               phase_id=&phase_seq_nb,
                               com_cd=&cmctn_role_cd);

  %*SASDOC=====================================================================;
  %* Define the scope of the macro variables generated by this program.
  %*====================================================================SASDOC*;
  %global complete_data_cleansing_ok nobs;

  %let complete_data_cleansing_ok=0;

  %local ds_pnd;

 
  %*SASDOC=====================================================================;
  %* Make sure that the parameters (initiative ID, phase sequence, and 
  %* communication role code) are numeric.
  %*====================================================================SASDOC*;

    %*SASDOC===================================================================;
    %* Get all of the "no edit" and "soft edit" records from the communication
    %* pending table, &HERCULES..TCMCTN_PENDING.  These records will be making
    %* their way into the final output file depending on the value of the 
    %* &HERCULES..TPHASE_RVR_FILE.DATA_CLEANSING_CD.
    %*==================================================================SASDOC*;

    proc sql noprint;
      create   table work.pending  as

      select   pnd.initiative_id,
               pnd.phase_seq_nb,
               pnd.cmctn_role_cd,
               pnd.recipient_id,
               pnd.data_quality_cd,
               rvr.data_cleansing_cd,
               rvr.reject_edit_cd,
               pnd.rvr_last_nm,
               pnd.rvr_first_nm,
               pnd.address1_tx,
               pnd.address2_tx,
               pnd.address3_tx,
               pnd.address4_tx,
               pnd.city_tx,
               pnd.state_cd,
               pnd.zip_cd,
               pnd.zip_suffix_cd,
               pnd.intl_postal_cd,
               pnd.country_cd

      from     &hercules..tcmctn_pending   pnd,
               &hercules..tphase_rvr_file  rvr
      where    pnd.initiative_id   = &init_id           and
               pnd.initiative_id   = rvr.initiative_id  and
               pnd.phase_seq_nb    = &phase_id          and
               pnd.phase_seq_nb    = rvr.phase_seq_nb   and
               pnd.cmctn_role_cd   = &com_cd            and
               pnd.cmctn_role_cd   = rvr.cmctn_role_cd  
      order by pnd.initiative_id,
               pnd.phase_seq_nb,
               pnd.cmctn_role_cd,
               pnd.recipient_id;
    quit;
	   %set_error_fl;

    %*SASDOC===================================================================;
    %* Determine whether there are any "no edit" or "soft edit" records from 
    %* &HERCULES..TCMCTN_PENDING for this task that should be used to update the 
    %* DATA_PND.T_&INIT_ID._&PHASE_ID._&COM_CD SAS dataset.
    %*==================================================================SASDOC*;

	 PROC SQL NOPRINT;
	   SELECT COUNT(*) INTO : nobs
	     FROM work.pending
		 ;
	  QUIT;

    %if &nobs %then %do;


      %*SASDOC=================================================================;
      %* Confirm that the task pending library and dataset exist.
      %*================================================================SASDOC*;

      %let ds_pnd=%upcase(data_pnd.t_%cmpres(&init_id)_%cmpres(&phase_id)_%cmpres(&com_cd));

      %if ^%sysfunc(libref(data_pnd)) and %sysfunc(exist(&ds_pnd)) %then %do;

	PROC SQL NOPRINT;
          select 'DSPND.'||trim(left(name)) into :other_dspnd_cols separated by ', ' 
	  from   sashelp.vcolumn
	  WHERE  libname = 'DATA_PND' 
/*            UPCASE(libname) = 'DATA_PND' */
		AND UPCASE(memname) = "%upcase(%scan(&ds_pnd,2,.))"
		AND UPCASE(name) NOT IN (
				  'DATA_QUALITY_CD',
			      'RVR_LAST_NM', 
			      'RVR_FIRST_NM',
			      'ADDRESS1_TX',
			      'ADDRESS2_TX',
			      'ADDRESS3_TX',
			      'ADDRESS4_TX',
                  'CITY_TX',
                  'STATE_CD',
                  'ZIP_CD',
                  'ZIP_SUFFIX_CD',
                  'INTL_POSTAL_CD',
                  'COUNTRY_CD')
          order by varnum;
	   QUIT;
	   	 %set_error_fl;


    /*
       %*SASDOC=======================================================;
       %* c.j.s 12/10/07
       %* CHANGED the case statement so that data_quality_cd was not changed from 2 to 1 
       %* the folllowin line was taken out of the program
	   %* when  wrkpnd.data_cleansing_cd=1 and wrkpnd.data_quality_cd=2 then 1
	   %*======================================================SASDOC*;
  */

%*SASDOC------------------------------------------------------------------------
|	Commented out
|				dspnd.data_quality_cd 
|	Added
|				case when &data_cleansing_cd.=2 and dspnd.data_quality_cd=2 then 3
|                   	 else dspnd.data_quality_cd
|                end as data_quality_cd
+-----------------------------------------------------------------------SASDOC*;

	  PROC SQL NOPRINT;
      	select data_cleansing_cd into :data_cleansing_cd
        from &hercules..tphase_rvr_file  rvr
        where  rvr.initiative_id  = &INITIATIVE_ID and
               rvr.phase_seq_nb  = &PHASE_SEQ_NB and
               rvr.cmctn_role_cd  = &com_cd;
	  quit;


	  PROC SQL NOPRINT;
	  create table ds_pnd_temp as
	  select &other_dspnd_cols,
		 wrkpnd.rvr_last_nm,
		 wrkpnd.rvr_first_nm,
		 wrkpnd.address1_tx,
		 wrkpnd.address2_tx,
		 wrkpnd.address3_tx,
		 wrkpnd.address4_tx,
		 wrkpnd.city_tx,
		 wrkpnd.state_cd,
		 wrkpnd.zip_cd,
		 wrkpnd.zip_suffix_cd,
		 wrkpnd.intl_postal_cd,
		 wrkpnd.country_cd,
	         case when wrkpnd.data_cleansing_cd=2 and wrkpnd.data_quality_cd=2 then 3
                   else wrkpnd.data_quality_cd
                 end as data_quality_cd
          from   &ds_pnd        dspnd,
		 work.pending   wrkpnd
	  where  dspnd.recipient_id = wrkpnd.recipient_id
         union 
           select &other_dspnd_cols,
                  dspnd.rvr_last_nm,
		 dspnd.rvr_first_nm,
		 dspnd.address1_tx,
		 dspnd.address2_tx,
		 dspnd.address3_tx,
		 ' ' as address4_tx,
		 dspnd.city_tx,
		 dspnd.state as state_cd,
		 dspnd.zip_cd,
		 dspnd.zip_suffix_cd,
		 '' as intl_postal_cd,
		 . as country_cd,
/*                 dspnd.data_quality_cd*/
				case when &data_cleansing_cd.=2 and dspnd.data_quality_cd=2 then 3
                   	 else dspnd.data_quality_cd
                end as data_quality_cd

               from &ds_pnd dspnd

           where recipient_id not in 
                   (select distinct recipient_id
                      from work.pending) 

           ;
       QUIT;
      	 %set_error_fl;

		 data &ds_pnd;
		  set ds_pnd_temp;
		  run;
		  

       PROC SQL NOPRINT; 
	  select count(*) into :_soft_edit_total
	  from   &ds_pnd
	  where  data_quality_cd=2;
       QUIT;

	 %set_error_fl;

	 %IF &err_fl=0 %THEN  %DO; %let complete_data_cleansing_ok=1; %END;

	 														%end;
	                     %end;
          
%mend complete_data_cleansing;
