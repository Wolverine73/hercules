/*HEADER------------------------------------------------------------------------
MACRO: additional_fields.sas

PURPOSE:
                        Create Additional fields data ,selected by the user through the
						Java Screen.

LOGIC:                  Create temporary table with %create_base_file data.
						Create table with distinct recipient_ids  only from the %create_base_file
 						Macro.
						Create three Macro variables for each additional variable query.
						Create a format with variable names and table names.
						Pull all variable names from the table that has 117.
 						variables and create a macro variable called macvar1.
 						Also create a macro variable with all variables coming
 						from the current SAS program.
						
						
PARAMETERS:                     Global macro variables: Initiative_ID, Phase_Seq_Nb.
                        The name of input DB2 table &tbl_name_in. The table must contain
                        one or more fields based on receiver(s) of the file.
                                        The table must also have all fields (except demographics) defined
                        in the layout(s) tables TFILE_BASE_FIELD and TFILE_FIELD.

FIRST RELEASE: Kuladeep Mittapalli, DECEMBER 2006
|	    Mar  2007    - Greg Dudley Hercules Version  1.0  
|		03-Feb-2011  - Sathishkumar Veeraswamy
|						Removed extra spaces in let statements of macro variables FORMULARY_TX_SEL, CS_AREA_PHONE_SEL.
|						These variables had characters greater than 262 due to which warnings were generated in the SAS log.
|       26JUL2012    - P. Landis 
|                      Modified for new hercdev2 environment
+-----------------------------------------------------------------------HEADER*/

%MACRO additional_fields(tbl_name_in,CLAIMSA,HERCULES,INIT_ID,PHASE_ID,tbl_name_out);    

options symbolgen mprint mprintnest mlogic mlogicnest source2;

%GLOBAL MACVAR3 WORDCNT;
%LET MACVAR3=;
%LET WORDCNT=0;

*SASDOC ------------------------------------------------------------------------
 | Create temporary table with %create_base_file data.
 +-----------------------------------------------------------------------SASDOC*;
PROC SQL NOPRINT;
CREATE TABLE RECIPIENTS_TBL AS
 SELECT *
  FROM &tbl_name_in
  order by recipient_id;
QUIT;

*SASDOC ------------------------------------------------------------------------
 | Create table with distinct recipient_ids  only from the %create_base_file
 | Macro.
 +-----------------------------------------------------------------------SASDOC*;
%drop_db2_table(tbl_name=&DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL);

PROC SQL NOPRINT;
 CREATE TABLE &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL(BULKLOAD=YES) AS
  SELECT DISTINCT
		 RECIPIENT_ID
	FROM RECIPIENTS_TBL;
QUIT;
%runstats(tbl_name=&DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL);

*SASDOC ------------------------------------------------------------------------
 | Create three Macro variables for each additional variable query.
 +-----------------------------------------------------------------------SASDOC*;

 %LET CLIENT_ID_SEL = %STR (
	A.RECIPIENT_ID,
	B.CLIENT_ID 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL  A);

 %LET CLIENT_ID = %STR ( 
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B);

 %LET CLIENT_ID_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET BIRTH_DT_SEL = %STR (
	A.RECIPIENT_ID,
	B.BIRTH_DT 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET BIRTH_DT = %STR ( 
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B);

 %LET BIRTH_DT_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET AGE_SEL = %STR (
	A.RECIPIENT_ID,
	(YEAR(CURRENT DATE)- YEAR(B.BIRTH_DT)) AS AGE
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET AGE = %STR ( 
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B);

 %LET AGE_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET CDH_EXTERNAL_ID_SEL = %STR (
	A.RECIPIENT_ID,
	B.CDH_EXTERNAL_ID 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET CDH_EXTERNAL_ID = %STR (
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B);

 %LET CDH_EXTERNAL_ID_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET PTL_PRF_MAIL_SEL = %STR (
	A.RECIPIENT_ID,
	0 AS PTL_PRF_MAIL);

 %LET PTL_PRF_MAIL = %STR ( 
FROM);

 %LET PTL_PRF_MAIL_EXT = %STR (
  &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET PTL_PRF_RETAIL_SEL = %STR (
	A.RECIPIENT_ID,
	0 AS PTL_PRF_RETAIL);

 %LET PTL_PRF_RETAIL = %STR ( 

FROM);

 %LET PTL_PRF_RETAIL_EXT = %STR (
  &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET CDH_BENEFICIARY_ID_SEL = %STR (
	A.RECIPIENT_ID,
	B.CDH_BENEFICIARY_ID 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET CDH_BENEFICIARY_ID = %STR (
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B);

 %LET CDH_BENEFICIARY_ID_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET CLIENT_NM_SEL = %STR (
	A.RECIPIENT_ID,
	C.CLIENT_NM 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET CLIENT_NM = %STR (
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET CLIENT_NM_EXT = %STR (
,&CLAIMSA..TCLIENT1 C 
WHERE B.CLIENT_ID	= C.CLIENT_ID);
 
 %LET APPLIED_MAB_AT_SEL  = %STR (
	X.RECIPIENT_ID,
	X.APPLIED_MAB_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.APPLIED_MAB_AT ,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET APPLIED_MAB_AT  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN  		 B
ON A.RECIPIENT_ID = B.BENEFICIARY_ID 
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT			 C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET APPLIED_MAB_AT_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE			 D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID 
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.APPLIED_MAB_AT%) X);


 %LET EXCESS_MAB_AT_SEL  = %STR (
	X.RECIPIENT_ID,	
	X.EXCESS_MAB_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.EXCESS_MAB_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET EXCESS_MAB_AT  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT	    		C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET EXCESS_MAB_AT_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.EXCESS_MAB_AT%) X);


 %LET DRUG_NDC_ID_SEL  = %STR (
	X.RECIPIENT_ID,
	X.DRUG_NDC_ID
	FROM
	%(SELECT DISTINCT
	  A.RECIPIENT_ID,
	  D.DRUG_NDC_ID,
	  MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET DRUG_NDC_ID  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DRUG_NDC_ID_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
 AND D.BILLING_END_DT IS NOT NULL
  AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DRUG_NDC_ID%) X);

 %LET NHU_TYPE_CD_SEL  = %STR (
	X.RECIPIENT_ID,
	X.NHU_TYPE_CD
	FROM
	%(SELECT DISTINCT
	  A.RECIPIENT_ID,
	  D.NHU_TYPE_CD,
	  MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET NHU_TYPE_CD  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET NHU_TYPE_CD_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
 AND D.BILLING_END_DT IS NOT NULL
 AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.NHU_TYPE_CD%) X);

 %LET DISPENSED_QY_SEL  = %STR (
	X.RECIPIENT_ID,
	X.DISPENSED_QY
	FROM
	%(SELECT DISTINCT
	  A.RECIPIENT_ID,
	  D.DISPENSED_QY,
	  MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET DISPENSED_QY  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DISPENSED_QY_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
GROUP BY A.RECIPIENT_ID,D.DISPENSED_QY%) X);


 %LET DAY_SUPPLY_QY_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DAY_SUPPLY_QY
	FROM
	%(SELECT DISTINCT
	  A.RECIPIENT_ID,
	  D.DAY_SUPPLY_QY,
	  MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET DAY_SUPPLY_QY  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 	B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 		C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE		D);

 %LET DAY_SUPPLY_QY_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DAY_SUPPLY_QY
HAVING  SUM(D.RX_COUNT_QY) > 0%) X);

 %LET FILL_DT_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(D.FILL_DT) AS FILL_DT
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 		 B);

 %LET FILL_DT  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET FILL_DT_EXT  = %STR (       
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID);

 %LET LAST_FILL_DT_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(D.FILL_DT) AS LAST_FILL_DT
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 		 B);

 %LET LAST_FILL_DT  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET LAST_FILL_DT_EXT  = %STR (       
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID);

 %LET DELIVERY_SYSTEM_TX_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DELIVERY_SYSTEM_TX
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	CASE 
	WHEN D.DELIVERY_SYSTEM_CD IN (1,3) THEN 'RETAIL'
    ELSE 'MAIL' 
	END AS DELIVERY_SYSTEM_TX,
	MAX(D.FILL_DT));

 %LET DELIVERY_SYSTEM_TX  = %STR (
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 		 B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID  
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT		 	 C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DELIVERY_SYSTEM_TX_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE		 	D
ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID 
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DELIVERY_SYSTEM_CD%) X);

 %LET DELIVERY_SYSTEM_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DELIVERY_SYSTEM
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	CASE 
	WHEN D.DELIVERY_SYSTEM_CD IN (3) THEN 'POS'
    WHEN D.DELIVERY_SYSTEM_CD IN (2) THEN 'MAIL'
	ELSE 'PAPER' 
	END AS DELIVERY_SYSTEM,
	MAX(D.FILL_DT));

 %LET DELIVERY_SYSTEM  = %STR (
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 		 B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID  
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT		 	 C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DELIVERY_SYSTEM_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE		 	D
ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID 
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DELIVERY_SYSTEM_CD%) X);

 %LET LAST_DELIVERY_SYS_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.LAST_DELIVERY_SYS
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
    D.DELIVERY_SYSTEM_CD AS LAST_DELIVERY_SYS,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET LAST_DELIVERY_SYS  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 		B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID  
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT		 	C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET LAST_DELIVERY_SYS_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE		 	D
ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID 
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DELIVERY_SYSTEM_CD%) X);

 %LET DAW_TYPE_CD_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DAW_TYPE_CD
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.DAW_TYPE_CD,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET DAW_TYPE_CD  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DAW_TYPE_CD_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,DAW_TYPE_CD%) X);


 %LET DEDUCTIBLE_AT_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DEDUCTIBLE_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.DEDUCTIBLE_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET DEDUCTIBLE_AT  = %STR (
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN 				B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET DEDUCTIBLE_AT_EXT  = %STR (       
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.DEDUCTIBLE_AT%) X);

 %LET COPAY_AT_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.COPAY_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.COPAY_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET COPAY_AT  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET COPAY_AT_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
  GROUP BY A.RECIPIENT_ID,D.COPAY_AT%) X);

 %LET NET_COST_AT_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.NET_COST_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.NET_COST_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET NET_COST_AT  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C 
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET NET_COST_AT_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.NET_COST_AT%) X);

 %LET MEMBER_COST_AT_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.MEMBER_COST_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.MEMBER_COST_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET MEMBER_COST_AT  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C 
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET MEMBER_COST_AT_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.MEMBER_COST_AT%) X);

 %LET RX_COUNT_QY_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.RX_COUNT_QY
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.RX_COUNT_QY,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET RX_COUNT_QY  = %STR ( 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET RX_COUNT_QY_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.RX_COUNT_QY%) X);


 %LET FORMULARY_TX_SEL  = %STR (X.RECIPIENT_ID,	X.FORMULARY_TX FROM 
%(SELECT DISTINCT  A.RECIPIENT_ID, CASE D.FORMULARY_IN WHEN 3 THEN 'PREFERRED' WHEN 4 THEN 'PREFERRED' WHEN 5 THEN 'NON-PREFERRED' ELSE 'PREFERRED' END AS FORMULARY_TX, MAX(D.FILL_DT));


 %LET FORMULARY_TX  = %STR (
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET FORMULARY_TX_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.FORMULARY_IN%) X);


 %LET BLG_REPORTING_CD_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(C.BLG_REPORTING_CD) AS BLG_REPORTING_CD
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET BLG_REPORTING_CD  = %STR ( 
LEFT JOIN	&CLAIMSA..TELIG_DETAIL_HIS			B
  ON A.RECIPIENT_ID = B.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TCPGRP_CLT_PLN_GR1		C);

 %LET BLG_REPORTING_CD_EXT  = %STR (
  ON B.CLT_PLAN_GROUP_ID = C.CLT_PLAN_GROUP_ID
	GROUP BY A.RECIPIENT_ID);


 %LET CALC_GROSS_COST_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.CALC_GROSS_COST
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.CALC_GROSS_COST,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET CALC_GROSS_COST  = %STR ( 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN 			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET CALC_GROSS_COST_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.CALC_GROSS_COST%) X);


 %LET CDH_DAW_DIFF_AT_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.CDH_DAW_DIFF_AT
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.CDH_DAW_DIFF_AT,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET CDH_DAW_DIFF_AT  = %STR ( 
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN 				B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET CDH_DAW_DIFF_AT_EXT  = %STR (     
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.CDH_DAW_DIFF_AT%) X);


 %LET DEA_NB_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.DEA_NB
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	E.PRESCRIBER_DEA_NB	AS DEA_NB,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET DEA_NB  = %STR ( 
LEFT JOIN &CLAIMSA..TBENEF_XREF_DN 				B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET DEA_NB_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TPRSCBR_PRESCRIBE1		E
  ON D.NTW_PRESCRIBER_ID = E.PRESCRIBER_ID
  GROUP BY A.RECIPIENT_ID,E.PRESCRIBER_DEA_NB%) X);


 %LET DRG_POD_NM_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(F.POD_NM)	AS DRG_POD_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C);

 %LET DRG_POD_NM  = %STR (
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TDENIAL_CLAIM				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TFORMULARY_POD			E);

 %LET DRG_POD_NM_EXT  = %STR (
  ON D.FORMULARY_ID = E.FORMULARY_ID
LEFT JOIN	&CLAIMSA..TPOD						F
  ON E.POD_ID = F.POD_ID
	GROUP BY A.RECIPIENT_ID);

 %LET DRG_CELL_NM_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(F.CELL_NM)	AS DRG_CELL_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET DRG_CELL_NM  = %STR (
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TDENIAL_CLAIM				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TFORMULARY_CELL			E);

 %LET DRG_CELL_NM_EXT  = %STR (
  ON D.FORMULARY_ID = E.FORMULARY_ID
LEFT JOIN	&CLAIMSA..TCELL						F
  ON E.CELL_ID = F.CELL_ID
	GROUP BY A.RECIPIENT_ID);

 %LET DRUG_ABBR_DSG_NM_SEL = %STR (
	A.RECIPIENT_ID,
	MAX(D.DRUG_ABBR_DSG_NM)  AS DRUG_ABBR_DSG_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B);

 %LET DRUG_ABBR_DSG_NM = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TPOS_DENIAL_EXTRCT		C
  ON B.CDH_EXTERNAL_ID = C.CDH_EXTERNAL_ID);

 %LET DRUG_ABBR_DSG_NM_EXT = %STR (
LEFT JOIN	&CLAIMSA..TDRUG1					D
  ON C.DRUG_NDC_ID = D.DRUG_NDC_ID
	GROUP BY A.RECIPIENT_ID);

 %LET DRUG_ABBR_PROD_NM_SEL = %STR (
	A.RECIPIENT_ID,
	MAX(D.DRUG_ABBR_PROD_NM) AS DRUG_ABBR_PROD_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET DRUG_ABBR_PROD_NM = %STR (
LEFT JOIN	&CLAIMSA..TPOS_DENIAL_EXTRCT		C
  ON B.CDH_EXTERNAL_ID = C.CDH_EXTERNAL_ID);

 %LET DRUG_ABBR_PROD_NM_EXT = %STR (
LEFT JOIN	&CLAIMSA..TDRUG1					D
  ON C.DRUG_NDC_ID = D.DRUG_NDC_ID
	GROUP BY A.RECIPIENT_ID);

 %LET DRUG_ABBR_STRG_NM_SEL = %STR (
	A.RECIPIENT_ID,
	MAX(D.DRUG_ABBR_STRG_NM) AS DRUG_ABBR_STRG_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET DRUG_ABBR_STRG_NM = %STR (
LEFT JOIN	&CLAIMSA..TPOS_DENIAL_EXTRCT		C
  ON B.CDH_EXTERNAL_ID = C.CDH_EXTERNAL_ID);

 %LET DRUG_ABBR_STRG_NM_EXT = %STR (
LEFT JOIN	&CLAIMSA..TDRUG1					D
  ON C.DRUG_NDC_ID = D.DRUG_NDC_ID
	GROUP BY A.RECIPIENT_ID);


 %LET DRUG_TX_SEL = %STR (
	A.RECIPIENT_ID,
	MAX(D.GPI_GROUP||D.GPI_CLASS||D.GPI_SUBCLASS) AS DRUG_TX
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET DRUG_TX = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TPOS_DENIAL_EXTRCT		C
  ON B.CDH_EXTERNAL_ID = C.CDH_EXTERNAL_ID);

 %LET DRUG_TX_EXT = %STR (
LEFT JOIN	&CLAIMSA..TDRUG1					D
  ON C.DRUG_NDC_ID = D.DRUG_NDC_ID
	GROUP BY A.RECIPIENT_ID);

 %LET EXCESS_OOP_AT_SEL  = %STR (
	A.RECIPIENT_ID,	
	MAX(D.EXCESS_OOP_AT ) AS EXCESS_OOP_AT 
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET EXCESS_OOP_AT  = %STR ( 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET EXCESS_OOP_AT_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE_EXT			D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
	GROUP BY A.RECIPIENT_ID);

 %LET GPI_THERA_CLS_NM_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(F.GPI_THERA_CLS_NM) AS GPI_THERA_CLS_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				B
  ON A.RECIPIENT_ID = B.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TDENIAL_CLAIM				C);

 %LET GPI_THERA_CLS_NM  = %STR (
  ON B.BENEFIT_REQUEST_ID = C.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TFORMULARY_POD			D
  ON C.FORMULARY_ID = D.FORMULARY_ID
LEFT JOIN	&CLAIMSA..TPOD						E);

 %LET GPI_THERA_CLS_NM_EXT  = %STR (
  ON D.POD_ID = E.POD_ID
LEFT JOIN	&CLAIMSA..TGPITC_GPI_THR_CLS		F
  ON E.GPI_THERA_CLS_CD = F.GPI_THERA_CLS_CD
	GROUP BY A.RECIPIENT_ID);

 %LET INCENTIVE_TYPE_CD_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(D.INCENTIVE_TYPE_CD) AS INCENTIVE_TYPE_CD
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN B);

 %LET INCENTIVE_TYPE_CD  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TPOS_REBATE				D);

 %LET INCENTIVE_TYPE_CD_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
	GROUP BY A.RECIPIENT_ID);

 %LET MOC_PHM_CD_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.MOC_PHM_CD
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	E.MOC_PHM_CD,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B);

 %LET MOC_PHM_CD  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET MOC_PHM_CD_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TMAIL_ORD_PB_RLS			E
  ON D.PB_ID = E.PB_ID
	GROUP BY A.RECIPIENT_ID,E.MOC_PHM_CD%) X);

 %LET CS_AREA_PHONE_SEL  = %STR (X.RECIPIENT_ID,	X.CS_AREA_PHONE FROM	
%(SELECT DISTINCT A.RECIPIENT_ID, MAX('(' || E.TALX_PHN_SAR_NB || ')' || SUBSTR(E.TALX_PHN_NB,1,3)|| '-' ||SUBSTR(E.TALX_PHN_NB,4)) AS CS_AREA_PHONE, MAX(FILL_DT) FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL A);

 %LET CS_AREA_PHONE  = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET CS_AREA_PHONE_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TMAIL_ORD_PB_RLS			E
  ON D.PB_ID = E.PB_ID
	GROUP BY A.RECIPIENT_ID%) X);

 %LET PHARMACY_NM_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.PHARMACY_NM
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	E.PHARMACY_NM,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B);

 %LET PHARMACY_NM  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET PHARMACY_NM_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TPHARM_PHARMACY			E
  ON D.NABP_ID = E.NABP_ID
	GROUP BY A.RECIPIENT_ID,E.PHARMACY_NM%) X);

 %LET PLAN_CD_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.PLAN_CD
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	E.PLAN_CD,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B);

 %LET PLAN_CD  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET PLAN_CD_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TCPGRP_CLT_PLN_GR1		E
  ON D.CLT_PLAN_GROUP_ID = E.CLT_PLAN_GROUP_ID
	GROUP BY A.RECIPIENT_ID,E.PLAN_CD%) X);

%LET GROUP_CD_SEL  = %STR (
	X.RECIPIENT_ID,
	X.GROUP_CD
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	E.GROUP_CD,
	MAX(D.FILL_DT)
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B);

 %LET GROUP_CD  = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT 				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D);

 %LET GROUP_CD_EXT  = %STR (
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
LEFT JOIN	&CLAIMSA..TCPGRP_CLT_PLN_GR1		E
  ON D.CLT_PLAN_GROUP_ID = E.CLT_PLAN_GROUP_ID
	GROUP BY A.RECIPIENT_ID,E.GROUP_CD%) X);

 %LET PRESCRIBER_NM_SEL  = %STR (
	A.RECIPIENT_ID,
	MAX(E.PRESCRIBER_NM)	AS	PRESCRIBER_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET PRESCRIBER_NM  = %STR (
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TMAIL_ORD_INTERVNT		D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID);

 %LET PRESCRIBER_NM_EXT  = %STR (
LEFT JOIN	&CLAIMSA..TPRSCBR_PRESCRIBE1		E
  ON D.PRESCRIBER_ID = E.PRESCRIBER_ID
	GROUP BY A.RECIPIENT_ID);

 %LET RX_NB_SEL  = %STR (
 	X.RECIPIENT_ID,
	X.RX_NB
	FROM
	%(SELECT DISTINCT
	A.RECIPIENT_ID,
	D.RX_NB	
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET RX_NB  = %STR ( 
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID
LEFT JOIN	&CLAIMSA..TBEN_REQ_KIT				C
  ON B.BENEFICIARY_ID = C.PT_BENEFICIARY_ID);

 %LET RX_NB_EXT  = %STR (        
LEFT JOIN	&CLAIMSA..TRXCLM_BASE				D
  ON C.BENEFIT_REQUEST_ID = D.BENEFIT_REQUEST_ID
AND D.BILLING_END_DT IS NOT NULL
AND D.BRLI_VOID_IN <= 0
	GROUP BY A.RECIPIENT_ID,D.RX_NB%) X);

 %LET SUBJECT_ID_SEL = %STR (
	A.RECIPIENT_ID,
	MAX(C.SUBJECT_ID) AS SUBJECT_ID
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SUBJECT_ID = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_XREF_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SUBJECT_ID_EXT = %STR (
LEFT JOIN	&CLAIMSA..TCMCTN_SUBJECT_DRG		C
  ON B.BENEFICIARY_ID = C.SUBJECT_ID
	GROUP BY A.RECIPIENT_ID);

 %LET SBJ_ADDRESS1_TX_SEL = %STR (
	A.RECIPIENT_ID,
	B.ADDRESS_LINE1_TX	AS SBJ_ADDRESS1_TX
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_ADDRESS1_TX = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B);

 %LET SBJ_ADDRESS1_TX_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_CITY_TX_SEL = %STR (
	A.RECIPIENT_ID,
	B.CITY_TX	AS SBJ_CITY_TX
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_CITY_TX = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_CITY_TX_EXT = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_STATE_SEL = %STR (
	A.RECIPIENT_ID,
	B.STATE	AS SBJ_STATE
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_STATE = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B);

 %LET SBJ_STATE_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_ZIP_CD_SEL = %STR (
	A.RECIPIENT_ID,
	B.ZIP_CD	AS SBJ_ZIP_CD
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_ZIP_CD = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B);

 %LET SBJ_ZIP_CD_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_ZIP_SUFFIX_CD_SEL = %STR (
	A.RECIPIENT_ID,
	B.ZIP_SUFFIX_CD	AS SBJ_ZIP_SUFFIX_CD
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_ZIP_SUFFIX_CD = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B);

 %LET SBJ_ZIP_SUFFIX_CD_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_FIRST_NM_SEL = %STR (
	A.RECIPIENT_ID,
	B.BNF_FIRST_NM	AS SBJ_FIRST_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_FIRST_NM = %STR (
LEFT JOIN	&CLAIMSA..TBENEFICIARY				B);

 %LET SBJ_FIRST_NM_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

 %LET SBJ_LAST_NM_SEL = %STR (
	A.RECIPIENT_ID,
	B.BNF_LAST_NM	AS SBJ_LAST_NM
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET SBJ_LAST_NM = %STR (
LEFT JOIN	&CLAIMSA..TBENEFICIARY				B);

 %LET SBJ_LAST_NM_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);


 %LET DATA_QUALITY_CD_SEL = %STR (
	A.RECIPIENT_ID,
	B.DATA_QUALITY_CD
FROM &DB2_TMP..&TABLE_PREFIX._RECIPIENTS_TBL	A);

 %LET DATA_QUALITY_CD = %STR (
LEFT JOIN	&CLAIMSA..TBENEF_ADDRESS_DN			B);

 %LET DATA_QUALITY_CD_EXT = %STR (
  ON A.RECIPIENT_ID = B.BENEFICIARY_ID);

*SASDOC ------------------------------------------------------------------------
 | Create a format with variable names and table names.
 +-----------------------------------------------------------------------SASDOC*;

PROC FORMAT;
   VALUE $TBLNAM
   	  'APPLIED_MAB_AT'	  	=	"&APPLIED_MAB_AT"
 
   	  'BIRTH_DT'			=	"&BIRTH_DT" 
   	  'AGE'					=	"&AGE" 
	  'BLG_REPORTING_CD'	= 	"&BLG_REPORTING_CD"

	  'CALC_GROSS_COST'		= 	"&CALC_GROSS_COST"
   	  'CDH_BENEFICIARY_ID'	=	"&CDH_BENEFICIARY_ID"
	  'CDH_DAW_DIFF_AT'		=	"&CDH_DAW_DIFF_AT"
	  'CDH_EXTERNAL_ID'	  	=	"&CDH_EXTERNAL_ID" 
   	  'CLIENT_ID'		  	=	"&CLIENT_ID" 
   	  'CLIENT_NM'			=	"&CLIENT_NM"
	  'COPAY_AT'			=	"&COPAY_AT"
	  'CS_AREA_PHONE'		=	"&CS_AREA_PHONE"

	  'DEA_NB'				=	"&DEA_NB" 
   	  'DEDUCTIBLE_AT'		=	"&DEDUCTIBLE_AT"
	  'DATA_QUALITY_CD'		=	"&DATA_QUALITY_CD" 
   	  'DELIVERY_SYSTEM'		=	"&DELIVERY_SYSTEM"
	  'LAST_DELIVERY_SYS'	=	"&LAST_DELIVERY_SYS"
   	  'DELIVERY_SYSTEM_TX'	=	"&DELIVERY_SYSTEM_TX"
   	  'DISPENSED_QY'		=	"&DISPENSED_QY"
   	  'DRG_CELL_NM'			=	"&DRG_CELL_NM"
   	  'DRG_POD_NM'			=	"&DRG_POD_NM"
   	  'DRUG_ABBR_DSG_NM'	=	"&DRUG_ABBR_DSG_NM"
   	  'DRUG_ABBR_PROD_NM'	=	"&DRUG_ABBR_PROD_NM"
	  'DRUG_ABBR_STRG_NM'	=	"&DRUG_ABBR_STRG_NM"
   	  'DRUG_NDC_ID'			=	"&DRUG_NDC_ID"
	  'DRUG_TX'				=	"&DRUG_TX"
 
   	  'EXCESS_MAB_AT'		=	"&EXCESS_MAB_AT" 
   	  'EXCESS_OOP_AT'		=	"&EXCESS_OOP_AT" 

   	  'FILL_DT'				=	"&FILL_DT"
	  'LAST_FILL_DT'		=	"&LAST_FILL_DT"
   	  'FORMULARY_TX'		=	"&FORMULARY_TX"

	  'GPI_THERA_CLS_NM'	=	"&GPI_THERA_CLS_NM"
	  'GROUP_CD'			=	"&GROUP_CD"

	  'INCENTIVE_TYPE_CD'	=	"&INCENTIVE_TYPE_CD"
	  'MEMBER_COST_AT'		=	"&MEMBER_COST_AT"
	  'MOC_PHM_CD'			=	"&MOC_PHM_CD"
	  'NET_COST_AT'			=	"&NET_COST_AT"

   	  'PHARMACY_NM'			=	"&PHARMACY_NM" 
	  'PLAN_CD'				=	"&PLAN_CD" 
   	  'PRESCRIBER_NM'		=	"&PRESCRIBER_NM"
	  'PTL_PRF_MAIL'		=	"&PTL_PRF_MAIL"
	  'PTL_PRF_RETAIL'		=	"&PTL_PRF_RETAIL"


   	  'RX_COUNT_QY'			=	"&RX_COUNT_QY"
	  'RX_NB'				=	"&RX_NB" 
   	  'SUBJECT_ID'			=	"&SUBJECT_ID" 
   	  'SBJ_ADDRESS1_TX'		=	"&SBJ_ADDRESS1_TX" 
	  'SBJ_CITY_TX'			=	"&SBJ_CITY_TX"
   	  'SBJ_ZIP_CD'			=	"&SBJ_ZIP_CD"
   	  'SBJ_ZIP_SUFFIX_CD'	=	"&SBJ_ZIP_SUFFIX_CD"

      OTHER					=	'Invalid Variable Name' 
      ;   
RUN;


PROC FORMAT;
   VALUE $TABSEL
   	  'APPLIED_MAB_AT'		=	"&APPLIED_MAB_AT_SEL"
 
   	  'BIRTH_DT'			=	"&BIRTH_DT_SEL" 
   	  'AGE'					=	"&AGE_SEL" 
	  'BLG_REPORTING_CD'	= 	"&BLG_REPORTING_CD_SEL"

	  'CALC_GROSS_COST'		= 	"&CALC_GROSS_COST_SEL"
   	  'CDH_BENEFICIARY_ID'	=	"&CDH_BENEFICIARY_ID_SEL"
	  'CDH_DAW_DIFF_AT'		=	"&CDH_DAW_DIFF_AT_SEL"
	  'CDH_EXTERNAL_ID'	  	=	"&CDH_EXTERNAL_ID_SEL" 
   	  'CLIENT_ID'		  	=	"&CLIENT_ID_SEL" 
   	  'CLIENT_NM'			=	"&CLIENT_NM_SEL"
	  'COPAY_AT'			=	"&COPAY_AT_SEL"
	  'CS_AREA_PHONE'		=	"&CS_AREA_PHONE_SEL"

	  'DEA_NB'				=	"&DEA_NB_SEL" 
   	  'DEDUCTIBLE_AT'		=	"&DEDUCTIBLE_AT_SEL"
	  'DATA_QUALITY_CD'		=	"&DATA_QUALITY_CD_SEL" 
   	  'DELIVERY_SYSTEM'		=	"&DELIVERY_SYSTEM_SEL"
	  'DELIVERY_SYSTEM_TX'	=	"&DELIVERY_SYSTEM_TX_SEL"
	  'LAST_DELIVERY_SYS'	=	"&LAST_DELIVERY_SYS_SEL"
   	  'DISPENSED_QY'		=	"&DISPENSED_QY_SEL"
   	  'DRG_CELL_NM'			=	"&DRG_CELL_NM_SEL"
   	  'DRG_POD_NM'			=	"&DRG_POD_NM_SEL"
   	  'DRUG_ABBR_DSG_NM'	=	"&DRUG_ABBR_DSG_NM_SEL"
   	  'DRUG_ABBR_PROD_NM'	=	"&DRUG_ABBR_PROD_NM_SEL"
	  'DRUG_ABBR_STRG_NM'	=	"&DRUG_ABBR_STRG_NM_SEL"
   	  'DRUG_NDC_ID'			=	"&DRUG_NDC_ID_SEL"
	  'DRUG_TX'				=	"&DRUG_TX_SEL"
 
   	  'EXCESS_MAB_AT'		=	"&EXCESS_MAB_AT_SEL" 
   	  'EXCESS_OOP_AT'		=	"&EXCESS_OOP_AT_SEL" 

   	  'FILL_DT'				=	"&FILL_DT_SEL"
	  'LAST_FILL_DT'		=	"&LAST_FILL_DT_SEL"
   	  'FORMULARY_TX'		=	"&FORMULARY_TX_SEL"

	  'GPI_THERA_CLS_NM'	=	"&GPI_THERA_CLS_NM_SEL"
	  'GROUP_CD'			=	"&GROUP_CD_SEL"

	  'INCENTIVE_TYPE_CD'	=	"&INCENTIVE_TYPE_CD_SEL"

	  'MEMBER_COST_AT'		=	"&MEMBER_COST_AT_SEL"
	  'MOC_PHM_CD'			=	"&MOC_PHM_CD_SEL"

	  'NET_COST_AT'			=	"&NET_COST_AT_SEL"

   	  'PHARMACY_NM'			=	"&PHARMACY_NM_SEL" 
	  'PLAN_CD'				=	"&PLAN_CD_SEL" 
   	  'PRESCRIBER_NM'		=	"&PRESCRIBER_NM_SEL"
	  'PTL_PRF_MAIL'		=	"&PTL_PRF_MAIL_SEL"
	  'PTL_PRF_RETAIL'		=	"&PTL_PRF_RETAIL_SEL"

   	  'RX_COUNT_QY'			=	"&RX_COUNT_QY_SEL"
	  'RX_NB'				=	"&RX_NB_SEL" 

   	  'SUBJECT_ID'			=	"&SUBJECT_ID_SEL" 
   	  'SBJ_ADDRESS1_TX'		=	"&SBJ_ADDRESS1_TX_SEL" 
	  'SBJ_CITY_TX'			=	"&SBJ_CITY_TX_SEL"
   	  'SBJ_ZIP_CD'			=	"&SBJ_ZIP_CD_SEL"
   	  'SBJ_ZIP_SUFFIX_CD'	=	"&SBJ_ZIP_SUFFIX_CD_SEL"

      OTHER					=	'Invalid Variable Name' 
      ;   
RUN;

PROC FORMAT;
   VALUE $TABEXT
   	  'APPLIED_MAB_AT'		=	"&APPLIED_MAB_AT_EXT"
 
   	  'BIRTH_DT'			=	"&BIRTH_DT_EXT" 
   	  'AGE'					=	"&AGE_EXT" 
	  'BLG_REPORTING_CD'	= 	"&BLG_REPORTING_CD_EXT"

	  'CALC_GROSS_COST'		= 	"&CALC_GROSS_COST_EXT"
   	  'CDH_BENEFICIARY_ID'	=	"&CDH_BENEFICIARY_ID_EXT"
	  'CDH_DAW_DIFF_AT'		=	"&CDH_DAW_DIFF_AT_EXT"
	  'CDH_EXTERNAL_ID'	  	=	"&CDH_EXTERNAL_ID_EXT" 
   	  'CLIENT_ID'		  	=	"&CLIENT_ID_EXT" 
   	  'CLIENT_NM'			=	"&CLIENT_NM_EXT"
	  'COPAY_AT'			=	"&COPAY_AT_EXT"
	  'CS_AREA_PHONE'		=	"&CS_AREA_PHONE_EXT"

	  'DEA_NB'				=	"&DEA_NB_EXT" 
   	  'DEDUCTIBLE_AT'		=	"&DEDUCTIBLE_AT_EXT"
	  'DATA_QUALITY_CD'		=	"&DATA_QUALITY_CD_EXT" 
   	  'DELIVERY_SYSTEM'		=	"&DELIVERY_SYSTEM_EXT"
	  'DELIVERY_SYSTEM_TX'	=	"&DELIVERY_SYSTEM_TX_EXT"
	  'LAST_DELIVERY_SYS'	=	"&LAST_DELIVERY_SYS_EXT"
   	  'DISPENSED_QY'		=	"&DISPENSED_QY_EXT"
   	  'DRG_CELL_NM'			=	"&DRG_CELL_NM_EXT"
   	  'DRG_POD_NM'			=	"&DRG_POD_NM_EXT"
   	  'DRUG_ABBR_DSG_NM'	=	"&DRUG_ABBR_DSG_NM_EXT"
   	  'DRUG_ABBR_PROD_NM'	=	"&DRUG_ABBR_PROD_NM_EXT"
	  'DRUG_ABBR_STRG_NM'	=	"&DRUG_ABBR_STRG_NM_EXT"
   	  'DRUG_NDC_ID'			=	"&DRUG_NDC_ID_EXT"
	  'DRUG_TX'				=	"&DRUG_TX_EXT"
 
   	  'EXCESS_MAB_AT'		=	"&EXCESS_MAB_AT_EXT" 
   	  'EXCESS_OOP_AT'		=	"&EXCESS_OOP_AT_EXT" 

   	  'FILL_DT'				=	"&FILL_DT_EXT"
	  'LAST_FILL_DT'		=	"&LAST_FILL_DT_EXT"
   	  'FORMULARY_TX'		=	"&FORMULARY_TX_EXT"

	  'GPI_THERA_CLS_NM'	=	"&GPI_THERA_CLS_NM_EXT"
	  'GROUP_CD'			=	"&GROUP_CD_EXT"

	  'INCENTIVE_TYPE_CD'	=	"&INCENTIVE_TYPE_CD_EXT"
	  'MEMBER_COST_AT'		=	"&MEMBER_COST_AT_EXT"
	  'MOC_PHM_CD'			=	"&MOC_PHM_CD_EXT"

	  'NET_COST_AT'			=	"&NET_COST_AT_EXT"

   	  'PHARMACY_NM'			=	"&PHARMACY_NM_EXT" 
	  'PLAN_CD'				=	"&PLAN_CD_EXT" 
   	  'PRESCRIBER_NM'		=	"&PRESCRIBER_NM_EXT"
	  'PTL_PRF_MAIL'		=	"&PTL_PRF_MAIL_EXT"
	  'PTL_PRF_RETAIL'		=	"&PTL_PRF_RETAIL_EXT"

   	  'RX_COUNT_QY'			=	"&RX_COUNT_QY_EXT"
	  'RX_NB'				=	"&RX_NB_EXT" 
   	  'SUBJECT_ID'			=	"&SUBJECT_ID_EXT" 
   	  'SBJ_ADDRESS1_TX'		=	"&SBJ_ADDRESS1_TX_EXT" 
	  'SBJ_CITY_TX'			=	"&SBJ_CITY_TX_EXT"
   	  'SBJ_ZIP_CD'			=	"&SBJ_ZIP_CD_EXT"
   	  'SBJ_ZIP_SUFFIX_CD'	=	"&SBJ_ZIP_SUFFIX_CD_EXT"

      OTHER					=	'Invalid Variable Name' 
      ;   
RUN;

*SASDOC ------------------------------------------------------------------------
 | Create table with  all the available variable names from the table 
 |whose file_id = 99 and file_seq_nb = 1
 +-----------------------------------------------------------------------SASDOC*;

PROC SQL NOPRINT;
CREATE TABLE TOTOL_VARIABLES	AS
SELECT B.FIELD_NM				AS ONE
  FROM &HERCULES..TFILE_FIELD			A
  	  ,&HERCULES..TFIELD_DESCRIPTION	B
 WHERE	A.FIELD_ID		=	B.FIELD_ID
   AND	A.FILE_ID		= 	99
   AND  A.FILE_SEQ_NB	= 	1
;
*SASDOC ------------------------------------------------------------------------
 | Create table with  available variables exists on &tbl_name_in.
 +-----------------------------------------------------------------------SASDOC*;

CREATE TABLE ORIGINAL_DATA 		AS
SELECT NAME  					AS ONE                
  FROM DICTIONARY.COLUMNS
 WHERE LIBNAME = "WORK"
   AND MEMNAME = "RECIPIENTS_TBL"
;
*SASDOC ------------------------------------------------------------------------
 | Create table with  Additional variables selected by the user
 | through the Java Screen.
 +-----------------------------------------------------------------------SASDOC*;
 
CREATE TABLE ADDITIONAL_VARIABLES	AS
SELECT B.FIELD_NM				AS ONE
  FROM &HERCULES..TINIT_ADHOC_FIELD		A
  	  ,&HERCULES..TFIELD_DESCRIPTION	B
 WHERE	A.FIELD_ID		=	B.FIELD_ID
   AND	A.INITIATIVE_ID	in(&INIT_ID);
QUIT;
*SASDOC ------------------------------------------------------------------------
 | Create Macro Variable For the additional variables selected by the user
 | through the Java Screen.
 +-----------------------------------------------------------------------SASDOC*;
PROC SQL;
SELECT B.FIELD_NM				
  INTO :MACVAR3 SEPARATED BY ' '
  FROM &HERCULES..TINIT_ADHOC_FIELD		A
  	  ,&HERCULES..TFIELD_DESCRIPTION	B
 WHERE	A.FIELD_ID		=	B.FIELD_ID
   AND	A.INITIATIVE_ID	in(&INIT_ID);
QUIT;
%PUT MACVAR3=&MACVAR3;
%MACRO WORDCNT(STRING);
%GLOBAL WORDCNT;                    
%LOCAL L;                           
%DO L= 1 %TO 100;                    
 %IF  %SCAN(&STRING,&L)= %THEN %DO; 
 %LET WORDCNT = %EVAL(&L-1);       
  %LET L=100;                       
  %END;                             
%END;                                                                   
%LET WORDCNT = &WORDCNT;                                                
%MEND WORDCNT;  
 
%MACRO CHEKVARS;                                       
PROC SORT DATA = TOTOL_VARIABLES;BY ONE;RUN;
PROC SORT DATA = ORIGINAL_DATA;BY ONE;RUN;
PROC SORT DATA = ADDITIONAL_VARIABLES;BY ONE;RUN;
PROC SORT DATA = RECIPIENTS_TBL;BY RECIPIENT_ID;RUN;

PROC SQL NOPRINT;
CREATE TABLE VARFMT	AS
SELECT B.FIELD_NM				AS ONE
	  ,B.FORMAT_SAS_TX			AS FMT
  FROM &HERCULES..TFILE_FIELD			A
  	  ,&HERCULES..TFIELD_DESCRIPTION	B
 WHERE	A.FIELD_ID		=	B.FIELD_ID
   AND	A.FILE_ID		= 	99
   AND  A.FILE_SEQ_NB	= 	1
;QUIT;

PROC SORT DATA = VARFMT;BY ONE;RUN;
FILENAME FMTFL "/herc&sysmode/data/sasadhoc/hercules/sas_formats/formats.txt";                                         
DATA _NULL_;
   		 MERGE VARFMT(IN = IN1)             
      TOTOL_VARIABLES(IN = IN2);     
   BY ONE;                                
FILE FMTFL;                                             
   IF IN1 AND IN2 THEN DO;
      PUT @01 ONE $32. @35 FMT $32. ;
   END;                                                             
RUN;                                                                   
FILENAME FMTFL clear;                
DATA FINAL2;
    FORMAT %INCLUDE "/herc&sysmode/data/sasadhoc/hercules/sas_formats/formats.txt";
RUN;
%IF &MACVAR3 NE %THEN %DO;
   %WORDCNT(&MACVAR3);
   %LET MACVAR3 = "&MACVAR3";
   %DO K = 1 %TO &WORDCNT;

      DATA _NULL_;
	     FORMAT VARNAME TBLNAME TBLNAME2 TBLNAM3 $1000.;
         VARNAME=SCAN(&MACVAR3,&K);
         TBLNAME=PUT(VARNAME,$TBLNAM.);
		 TBLNAME2=PUT(VARNAME,$TABSEL.);
		 TBLNAME3=PUT(VARNAME,$TABEXT.);
         CALL SYMPUT('VARNAME',COMPRESS(VARNAME)); 
         CALL SYMPUT('TBLNAM'|| LEFT(&K),TBLNAME);
		 CALL SYMPUT('TBLNAM2'|| LEFT(&K),TBLNAME2);
		 CALL SYMPUT('TBLNAM3'|| LEFT(&K),TBLNAME3);

      RUN;	 
PROC SQL NOPRINT;
  CONNECT TO DB2 AS DB2(DSN=&UDBSPRP);
    CREATE TABLE WORK.TBLNAME&K AS
    SELECT * FROM CONNECTION TO DB2      
        (SELECT &&TBLNAM2&K &&TBLNAM&K &&TBLNAM3&K);
DISCONNECT FROM DB2;
QUIT;
   %END;


         %DO K= 1 %TO &WORDCNT; 
            PROC SORT DATA = TBLNAME&K;BY RECIPIENT_ID;RUN;
         %END;

   DATA X;
      MERGE RECIPIENTS_TBL
         %DO K= 1 %TO &WORDCNT; 
            TBLNAME&K
         %END;
		 ;
      BY RECIPIENT_ID;
   RUN;
%END;
%ELSE %DO;
   DATA X;
      SET RECIPIENTS_TBL; 
   RUN;
%END;
DATA &tbl_name_out;
  IF _N_ = 1 THEN SET FINAL2;
 SET X;
RUN;

%MEND CHEKVARS;
%CHEKVARS;

PROC SQL;
 DROP TABLE RECIPIENTS_TBL;
 DROP TABLE TOTOL_VARIABLES;
 DROP TABLE ORIGINAL_DATA;
 DROP TABLE ADDITIONAL_VARIABLES;
 DROP TABLE MERG;
 DROP TABLE FINAL2;
 DROP TABLE X;
 QUIT;RUN;
 		 %IF &MACVAR3 NE %THEN %DO;
         %DO K= 1 %TO &WORDCNT; 
            PROC SQL;
			DROP TABLE TBLNAME&K;QUIT;
         %END;
		 %END;

%MEND additional_fields;
%additional_fields(WORK.&TBL_NAME_OUT_SH.,CLAIMSA,&HERCULES,&INITIATIVE_ID,&PHASE_SEQ_NB,WORK.&TBL_NAME_OUT_SH.);
