/***HEADER -------------------------------------------------------------------------
|  MACRO NAME:     PULL_CLAIMS_FOR_EDW_TBD.SAS
|
|  PURPOSE: CLAIMS FOR RXCLAIM AND RECAP - LOGIC FOR POAST-PROCESSING AND DE-DUPPING CLAIMS
|           
|
|  INPUT:      
|                       
|
|  OUTPUT:     
|
|
|  HISTORY:    E BUKOWSKI(SLIOUNKOVA) - CREATED - MODIFIED VERSION OF PULL_CLAIMS_FOR_EDW.SAS 
|  
+-------------------------------------------------------------------------------HEADER*/



%MACRO PULL_CLAIMS_FOR_EDW_TBD(TBL_NAME_IN1=,
								TBL_NAME_OUT1=,
								TBL_NAME_OUT2=,
								ADJ=,
						   		ADJ2=);

OPTIONS MPRINT MPRINTNEST MLOGIC MLOGICNEST SYMBOLGEN SOURCE2;

%PUT "TABLE TO BE DROPPED &TBL_NAME_OUT1.";
%PUT "TABLE TO BE DROPPED &TBL_NAME_OUT2.";
%DROP_ORACLE_TABLE(TBL_NAME=&TBL_NAME_OUT1.);
%DROP_ORACLE_TABLE(TBL_NAME=&TBL_NAME_OUT2.);


DATA CLMS_BEFORE_SORT (DROP=FIRST_TWO);
SET &TBL_NAME_IN1;
*SASDOC--------------------------------------------------------------------------
|JUNE 2012 - TARGET BY DRUG/ DSA AUTOMATION
|EB - DEA NUMBER VERIFICATION 
+------------------------------------------------------------------------SASDOC*;
FIRST_TWO=SUBSTR(DEA_NB,1,2);
IF VERIFY(TRIM(FIRST_TWO),'ABCDEFGHIJKLMNOPQRSTUVWXYZ') >0 THEN DEA_NB = '';
*SASDOC--------------------------------------------------------------------------
|JUNE 2012 - TARGET BY DRUG/ DSA AUTOMATION
|EB - BAD PRESCRIBER INDICATOR ASIGNMENT
+------------------------------------------------------------------------SASDOC*;
prctrmail=0;
%IF &PROGRAM_ID EQ 105 %THEN %DO;
if ENTITY_IND ='1'
    then prctrmail=1;
%END;
%ELSE %IF (&PROGRAM_ID EQ 106 AND &TASK_ID EQ 21) %THEN %DO;
if ENTITY_IND ='1'
  and prctr_rec_src = 0
   and prctr_term_reas_cd = ' '
    then prctrmail=1;
%END;
RUN;

*SASDOC--------------------------------------------------------------------------
|JUNE 2012 - TARGET BY DRUG/ DSA AUTOMATION
|EB - CONSOLIDATE MULTIPLE CLAIMS FOR THE SAME RX NUMBER FIRST
| (which can happen in "wrap carrier" scenario
+------------------------------------------------------------------------SASDOC*;
PROC SORT DATA = CLMS_BEFORE_SORT;
BY PHMCY_GID RX_NBR DSPND_DATE DRUG_NDC_ID DOC_NB DOC_NB_SEQ;
RUN;

DATA CLMS_BEFORE_SORT (DROP=MEMBER_COST_AT RX_COUNT_QY UNIT_QTY DAYS_SPLY);
SET CLMS_BEFORE_SORT;
RETAIN TEMP_MEMBER_COST_AT TEMP_RX_COUNT_QY TEMP_UNIT_QTY TEMP_DAYS_SPLY 0;
BY PHMCY_GID RX_NBR DSPND_DATE DRUG_NDC_ID DOC_NB DOC_NB_SEQ;
IF FIRST.DRUG_NDC_ID THEN DO;
	TEMP_MEMBER_COST_AT = 0;
	TEMP_RX_COUNT_QY    = 0;
	TEMP_UNIT_QTY       = 0;
	TEMP_DAYS_SPLY      = 0;
END;
	TEMP_MEMBER_COST_AT = TEMP_MEMBER_COST_AT + MEMBER_COST_AT;
	TEMP_RX_COUNT_QY    = TEMP_RX_COUNT_QY + RX_COUNT_QY;
	TEMP_UNIT_QTY       = TEMP_UNIT_QTY + UNIT_QTY;
    TEMP_DAYS_SPLY      = TEMP_DAYS_SPLY + DAYS_SPLY;
IF LAST.DRUG_NDC_ID THEN OUTPUT;
RUN;

PROC DATASETS LIBRARY=WORK NOLIST;
MODIFY CLMS_BEFORE_SORT;
RENAME 
TEMP_MEMBER_COST_AT = MEMBER_COST_AT
TEMP_RX_COUNT_QY = RX_COUNT_QY
TEMP_UNIT_QTY = UNIT_QTY
TEMP_DAYS_SPLY = DAYS_SPLY;
QUIT;

%IF &PROGRAM_ID EQ 106 AND &TASK_ID EQ 21 %THEN %DO;

*SASDOC--------------------------------------------------------------------------
|JUNE 2012 - TARGET BY DRUG/ DSA AUTOMATION
|EB - CONSOLIDATE MULTIPLE CLAIMS FOR THE SAME NDC FOR TARGET BY DRUG (106)
+------------------------------------------------------------------------SASDOC*;

PROC SORT DATA = CLMS_BEFORE_SORT;
BY CLIENT_LEVEL_1 MBR_ID DRUG_NDC_ID DSPND_DATE;
RUN;

DATA CLMS_AFTER_SORT (DROP=MEMBER_COST_AT RX_COUNT_QY UNIT_QTY DAYS_SPLY);
SET CLMS_BEFORE_SORT;
RETAIN TOT_MEMBER_COST_AT TOT_RX_COUNT_QY TOT_UNIT_QTY TOT_DAYS_SPLY 0;
BY CLIENT_LEVEL_1 MBR_ID DRUG_NDC_ID DSPND_DATE;
IF FIRST.DRUG_NDC_ID THEN DO;
	TOT_MEMBER_COST_AT = 0;
	TOT_RX_COUNT_QY    = 0;
	TOT_UNIT_QTY       = 0;
	TOT_DAYS_SPLY      = 0;
END;
	TOT_MEMBER_COST_AT = TOT_MEMBER_COST_AT + MEMBER_COST_AT;
	TOT_RX_COUNT_QY    = TOT_RX_COUNT_QY + RX_COUNT_QY;
	TOT_UNIT_QTY       = TOT_UNIT_QTY + UNIT_QTY;
    TOT_DAYS_SPLY      = TOT_DAYS_SPLY + DAYS_SPLY;
IF LAST.DRUG_NDC_ID THEN OUTPUT;
RUN;


%END; /*&PROGRAM_ID EQ 106 AND &TASK_ID EQ 21 */
%ELSE %IF &PROGRAM_ID EQ 105 %THEN %DO;

*SASDOC--------------------------------------------------------------------------
|JUNE 2012 - TARGET BY DRUG/ DSA AUTOMATION
|EB - CONSOLIDATE MULTIPLE CLAIMS FOR THE SAME NDC FOR DSA/NCQA (105)
| ALSO TAKE INTO ACCOUNT PRESCRIBER FOR PRESCRIBER FILE, OR COMBO FILE
+------------------------------------------------------------------------SASDOC*;

PROC SORT DATA = CLMS_BEFORE_SORT;
BY CLIENT_LEVEL_1 
%IF (&TRGT_RECIPIENT_CD EQ 2 OR &TRGT_RECIPIENT_CD EQ 3)
 %THEN %DO;
PRACTITIONER_ID 
 %END;
MBR_ID 
DRUG_NDC_ID 
DSPND_DATE;
RUN;

DATA CLMS_AFTER_SORT (DROP=MEMBER_COST_AT RX_COUNT_QY UNIT_QTY DAYS_SPLY);
SET CLMS_BEFORE_SORT;
RETAIN TOT_MEMBER_COST_AT TOT_RX_COUNT_QY TOT_UNIT_QTY TOT_DAYS_SPLY 0;
BY CLIENT_LEVEL_1 
%IF (&TRGT_RECIPIENT_CD EQ 2 OR &TRGT_RECIPIENT_CD EQ 3)
 %THEN %DO;
PRACTITIONER_ID 
 %END;
MBR_ID 
DRUG_NDC_ID 
DSPND_DATE;
IF FIRST.DRUG_NDC_ID THEN DO;
	TOT_MEMBER_COST_AT = 0;
	TOT_RX_COUNT_QY    = 0;
	TOT_UNIT_QTY       = 0;
	TOT_DAYS_SPLY      = 0;
END;
	TOT_MEMBER_COST_AT = TOT_MEMBER_COST_AT + MEMBER_COST_AT;
	TOT_RX_COUNT_QY    = TOT_RX_COUNT_QY + RX_COUNT_QY;
	TOT_UNIT_QTY       = TOT_UNIT_QTY + UNIT_QTY;
    TOT_DAYS_SPLY      = TOT_DAYS_SPLY + DAYS_SPLY;
IF LAST.DRUG_NDC_ID THEN OUTPUT;
RUN;

%END; /*&PROGRAM_ID EQ 105 */






%DROP_ORACLE_TABLE(TBL_NAME=&ORA_TMP..TMP_EDW_PULL_&INITIATIVE_ID._&ADJ2.);

DATA &ORA_TMP..TMP_EDW_PULL_&INITIATIVE_ID._&ADJ2.;
SET CLMS_AFTER_SORT;
RUN;


PROC SQL NOPRINT;
	CONNECT TO ORACLE(PATH=&GOLD );
	Execute
	(
	  CREATE TABLE &TBL_NAME_OUT1. AS  
	  SELECT 

		  E.PRESCRIBER_ID,
		  E.PRACTITIONER_ID AS PRACTITIONER_ID,
          E.MBR_GID AS CLM_MBR_GID,
          E.MBR_ID, 
		  E.MBR_GNDR_GID,
		  E.M_DOB,
		  E.REL_CODE,
		  E.CLIENT_LEVEL_1,
		  E.PAYER_ID,
		  E.DRUG_GID,
          E.LTR_RULE_SEQ_NB,
		  E.ADJ_ENGINE,
          E.DRG_GROUP_SEQ_NB,
          E.DRG_SUB_GRP_SEQ_NB,
          E.DRUG_NDC_ID,
		  E.NHU_TYPE_CD,
		  E.GCN_CODE,
          E.LAST_FILL_DT,
          E.DRUG_ABBR_PROD_NM,
          E.DRUG_ABBR_STRG_NM,
          E.DRUG_ABBR_DSG_NM,
		  E.RX_NBR AS RX_NB,
		  E.GPI AS GPI_THERA_CLS_CD,
		  E.TOT_MEMBER_COST_AT AS MEMBER_COST_AT,
		  E.TOT_UNIT_QTY AS DISPENSED_QY,
		  E.TOT_DAYS_SPLY AS DAY_SUPPLY_QY,
		  e.prctrmail,
		  E.REFILL_FILL_QY,
          E.PRESCRIBER_NPI_NB,
		  E.PHARMACY_NM,
		  E.BRAND_GENERIC,
		  E.FORMULARY_TX,
		  E.DEA_NB,
		  E.TOT_RX_COUNT_QY AS RX_COUNT_QY
		  , CASE E.DELIVERY_SYSTEM WHEN 'MAIL'   THEN 2
		         				   WHEN 'RETAIL' THEN 3
				                                 ELSE 0 
            END AS LAST_DELIVERY_SYS
		 , TRIM(E.MBR_ID) || TRIM(E.CLIENT_LEVEL_1) AS MBR_CLNT
		 , E.PRSN_CURR_KEY
     , E.MBR_GID /*MB 4/2013*/
       FROM &ORA_TMP..TMP_EDW_PULL_&INITIATIVE_ID._&ADJ2. E
		ORDER BY MBR_ID
	)by oracle;
	DISCONNECT FROM ORACLE;
QUIT;
%SET_ERROR_FL;


%DROP_ORACLE_TABLE(TBL_NAME=&ORA_TMP..TMP_EDW_PULL_&INITIATIVE_ID._&ADJ2.);




%IF &DRUG_GROUP2_EXIST_FLAG=1 AND &ERR_FL=0 %THEN %DO;
	DATA _NULL_;
		SET &HERCULES..TINIT_DRUG_GROUP(WHERE=(INITIATIVE_ID=&INITIATIVE_ID
		                                       AND DRG_GROUP_SEQ_NB=2));
		IF  TRIM(LEFT(OPERATOR_TX))='NOT' THEN CALL SYMPUT('NULL_CONDITION','IS NULL');
		                                  ELSE CALL SYMPUT('NULL_CONDITION','IS NOT NULL');
	RUN;
	%SET_ERROR_FL;

	%PUT NULL_CONDITION=&NULL_CONDITION;

	PROC SQL NOPRINT;
		CONNECT TO ORACLE(PATH=&GOLD );
  		EXECUTE 
		(
		CREATE TABLE &TBL_NAME_OUT2. AS
        SELECT A.*
	    FROM &TBL_NAME_OUT1. A
        LEFT JOIN
	 		 (SELECT MBR_ID, COUNT(*) AS CNT
			  FROM &TBL_NAME_OUT1. 
			  WHERE DRG_GROUP_SEQ_NB=2
			  GROUP BY  MBR_ID
			  ) B
        ON A.MBR_ID=B.MBR_ID 
        WHERE  B.MBR_ID &NULL_CONDITION.
  		)BY ORACLE;
    	DISCONNECT FROM ORACLE;
	QUIT;
   %SET_ERROR_FL;

%END; /* END OF &DRUG_GROUP2_EXIST_FLAG = 1*/
%ELSE %DO;
                                                                                                            
	PROC SQL;
		CONNECT TO ORACLE(PATH=&GOLD );
   		EXECUTE
		(
		CREATE TABLE &TBL_NAME_OUT2. AS
		SELECT * FROM &TBL_NAME_OUT1. 
		) BY ORACLE;
		DISCONNECT FROM ORACLE;
	QUIT;
    %SET_ERROR_FL;

%END; /* END OF &GET_NDC_NDC_TBL_FL = 1 AND &DRUG_GROUP2*/

%DROP_ORACLE_TABLE(TBL_NAME=&TBL_NAME_OUT1.);


%MEND PULL_CLAIMS_FOR_EDW_TBD;







